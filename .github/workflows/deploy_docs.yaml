name: Deploy Docs

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - v*
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'datalayers-io'
    strategy:
      matrix:
        docs_language: [zh, en]

    steps:
    - name: clone docs
      uses: actions/checkout@main
      with:
        fetch-depth: 0
        path: docs-files

    - name: clone frontend
      uses: actions/checkout@main
      with:
        repository: 'datalayers-io/docs-datalayers-frontend'
        token: ${{ secrets.DATALAYERS_GIT_CI_TOKEN }}
        path: frontend

    - name: use python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: use node.js
      uses: actions/setup-node@v3
      with:
        node-version-file: 'frontend/.nvmrc'

    - name: use pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: set env
      run: |
         BRANCH=$(echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g")
         if [ "$BRANCH" = "main" ];then
         VERSION="latest"
         else
         VERSION=$BRANCH
         fi
         echo "DOCS_BRANCH=$BRANCH" >> $GITHUB_ENV
         echo "VERSION=$VERSION" >> $GITHUB_ENV
         echo "DOCS_TYPE=datalayers" >> $GITHUB_ENV
         echo "LANGUAGES=${{ matrix.docs_language }}" >> $GITHUB_ENV

    - name: remove unused files
      run: |
        cd docs-files
        pip3 install pyyaml
        python3 ./gen.py | tee directory.json
        python3 .github/scripts/remove_unused.py directory.json $(pwd)

    - name: move files
      run: |
        rm frontend/docs/*.md || true
        rm frontend/README.md || true
        mkdir -p frontend/docs/${DOCS_TYPE}/${VERSION}/
        mkdir -p frontend/docs/public/api/
        if [ "${LANGUAGES}" = "en" ]; then
          cp -r docs-files/en_US/* frontend/docs/${DOCS_TYPE}/${VERSION}/
        else
          cp -r docs-files/zh_CN/* frontend/docs/${DOCS_TYPE}/${VERSION}/
        fi
        cp docs-files/directory.json frontend/docs/.vitepress/config/directory.json

    - name: generate version config
      run: |
        cd docs-files
        python3 .github/scripts/generate_version.py $(git tag | egrep "v(.*)$" | xargs echo -n) > ../frontend/docs/public/api/${DOCS_TYPE}_versions.json
        cat ../frontend/docs/public/api/${DOCS_TYPE}_versions.json

    - name: build docs
      run: |
        cd frontend
        pnpm install
        pnpm build

    - name: upload dist to oss
      run: |
        cd frontend/docs/.vitepress/
        wget -q https://gosspublic.alicdn.com/ossutil/1.7.8/ossutil64
        chmod 755 ./ossutil64
        ./ossutil64 config -e https://oss-accelerate.aliyuncs.com -i ${{ secrets.ALI_OSS_ACCESSKEY_ID }} -k ${{ secrets.ALI_OSS_ACCESSKEY_SECRET }} -L CH
        oss_bucket=datalayers-docs-${LANGUAGES}
        ./ossutil64 rm -r -f oss://${oss_bucket}/ || true
        ./ossutil64 cp -r -f dist/ oss://${oss_bucket}/

    # - name: refresh en cdn
    #   uses: Swilder-M/refresh-ali-cdn@v1
    #   with:
    #     access_key_id: ${{ secrets.ALI_OSS_ACCESSKEY_ID }}
    #     access_key_secret: ${{ secrets.ALI_OSS_ACCESSKEY_SECRET }}
    #     file_paths: https://docs.datalayers.io/

    # - name: update search index
    #   uses: Swilder-M/docsearch-scraper-simple@next
    #   env:
    #     APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID_NEXT }}
    #     API_KEY: ${{ secrets.ALGOLIA_API_KEY_NEXT }}
    #   with:
    #     docs_type: ${{ env.DOCS_TYPE }}
    #     docs_version: ${{ env.VERSION }}
